<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="admin">
 
	 <select id="getBookCount" resultType="int">
	 	select count(*) from book
	 </select>
	 
	 <select id="getBookSearchAllCount" resultType="int" parameterType="hashmap">
	 	select count(*) from book where book_subject like #{all} or book_author like #{all} or
	 	book_publisher like #{all} or book_classification like #{all}
	 </select>
	 
	 <select id="getBookSearchCount" parameterType="hashmap" resultType="int">
	 	select count(*) from book where ${category} like '%${value}%'
	 </select>
	 
	 <select id="getBookSearchAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where b.book_subject like '%${value}%' or b.book_author like '%${value}%' or
	 	b.book_publisher like '%${value}%' or b.book_classification like '%${value}%'
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 
	 <select id="getBookSearchList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where b.${category_} like '%${search}%'
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 
	 <select id="getBookSortSubject" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_subject asc limit #{startRow}, #{pageSize}	 
	 </select>
	 
	 <select id="getBookSortAuthor" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_author asc limit #{startRow}, #{pageSize}	 
	 </select>

	 <select id="getBookSortNumber" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by bb.book_number desc limit #{startRow}, #{pageSize} 	 
	 </select>

	 <select id="getBookSortPubDate" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_pubDate desc limit #{startRow}, #{pageSize} 	 
	 </select>

	 <select id="getBookSortDate" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_date desc limit #{startRow}, #{pageSize} 	 
	 </select>	 	 	
	 
	 <select id="getBookList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_number desc limit #{startRow}, #{pageSize} 
	 </select>
	 
	 <select id="getBookNum" parameterType="int" resultType="int">
	 	select ifnull(max(book_number),0) from book
	 </select>
	 
	 <insert id="insertBook" parameterType="net.book.db.BookDTO">
	 	insert into book (book_number, book_subject, book_author, book_publisher, book_pubDate, 
	 	book_form, book_notation, book_isbn, book_classification, book_date)
	 	values (#{book_number}, #{book_subject}, #{book_author}, #{book_publisher}, #{book_pubDate}, 
	 	#{book_form}, #{book_notation}, #{book_isbn}, #{book_classification}, #{book_date})
	 </insert>
	 
	 <select id="getBookInfo"  parameterType="int" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, b.book_pubDate, b.book_form, b.book_notation,
	 	 b.book_isbn, b.book_classification, b.book_date, d.dbook_reason, d.dbook_state 
	 	from book b
	 	left join dbook d
	 	on d.book_number=b.book_number
	 	where b.book_number=#{book_number}
	 </select>
	 
	 <select id="getDBookCount" resultType="int">
	 	select count(*) from dbook
	 </select>
	 
	 <insert id="insertDBook" parameterType="net.book.db.BookDTO">
	 	insert into dbook (book_number, dbook_reason, dbook_state)
	 	values (#{book_number}, #{dbook_reason}, #{dbook_state})
	 </insert>
	 
	 <select id="getDBookList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	  	select * from dbook order by book_number desc limit #{startRow}, #{pageSize} 
	 </select>
	 
	 <select id="getRBookCount" resultType="int">
	 	select count(*) from rbook
	 </select>
	 
	 <select id="getRBookList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select * from rbook order by book_number desc limit #{startRow}, #{PageSize}
	 </select>
	 
	 <select id="getHBookCount" resultType="int">
	 	select count(*) from hbook
	 </select>
 
 	 <select id="getHBookList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select * from hbook order by member_id desc limit #{startRow}, #{PageSize}
	 </select>
 
	<select id="getMemberCount" resultType="int">
 		select count(*) as count from member
 	</select>
 
	<select id="getBlackMemberCount" resultType="int">
 	select count(*) from blacklist;
 	</select>
 	
 	<select id="getGoodMemberCount" resultType="int">
 	select count(*) from good_member;
 	</select>
 	<select id="getMemberList" parameterType="hashmap" resultType="net.member.db.MemberDTO">
   	 	select m.member_id, m.member_pass, m.member_name, m.member_post, m.member_address1, m.member_address2, 
		m.member_phone, m.member_email, m.member_date, g.borrow_count, ifnull(g.gm_check, 0) gm_check, b.bl_count, b.bl_date, ifnull(b.bl_check, 0) bl_check
		from member m
		left join good_member g
		on m.member_id=g.member_id 
		left join blacklist b 
		on m.member_id = b.member_id order by member_name desc limit #{startRow},#{pageSize}
   	</select>
	<select id="getAdminMember" parameterType="String" resultType="net.member.db.MemberDTO">
	select m.member_id, m.member_pass, m.member_name, m.member_post, m.member_address1, m.member_address2, 
		m.member_phone, m.member_email, m.member_date, g.borrow_count, ifnull(g.gm_check, 0) gm_check, b.bl_count, b.bl_date, ifnull(b.bl_check, 0) bl_check
		from member m
		left join good_member g
		on m.member_id=g.member_id 
		left join blacklist b 
		on m.member_id = b.member_id where m.member_id=#{member_id};
	</select>
	
 
 </mapper>