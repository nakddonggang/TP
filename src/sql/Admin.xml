<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="admin">
 
	 <select id="getBookCount" resultType="int">
	 	select count(*) from book
	 </select>
	 	 
	 <select id="getBookList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_number desc limit #{startRow}, #{pageSize} 
	 </select>
	 
	 <select id="getBookSearchAllCount" resultType="int" parameterType="hashmap">
	 	select count(*) from book where book_subject like #{all} or book_author like #{all} or
	 	book_publisher like #{all} or book_isbn like #{all} or book_classification like #{all}
	 </select>
	 
	 <select id="getBookSearchAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where b.book_subject like '%${value}%' or b.book_author like '%${value}%' or
	 	b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%'
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 	 
	 <select id="getBookSearchCount" parameterType="hashmap" resultType="int">
	 	select count(*) from book where ${category} like '%${value}%'
	 </select>
	 
	 <select id="getBookSearchList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where b.${category_} like '%${search}%'
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 
	 <select id="SearchTwoCount" parameterType="hashmap" resultType="int">
	 	select count(*) from book where ${category1} like '%${value1}%'
		${option} ${category2} like '%${value2}%'
	 </select>	

	<select id="SearchTwoList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where b.${category1} like '%${search1}%'
		${option} b.${category2} like '%${search2}%'
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select>
	 
	 <select id="SearchTwoAllCount" parameterType="hashmap" resultType="int">	
		select count(*)
		from book
		where (book_subject like #{all} or book_author like #{all} or book_publisher like #{all} or book_isbn like #{all} or book_classification like #{all})
		${option} ${category} like '%${value}%'
	</select>

	<select id="SearchTwoAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">	
		select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where (b.book_subject like '%${value}%' or b.book_author like '%${value}%' or b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		${option} b.${category1} like '%${value1}%'
		order by b.book_number desc limit #{startRow},#{pageSize}	 
	 </select> 

	 <select id="SearchThrCount" parameterType="hashmap" resultType="int">
	 	select count(*)
		from book
		where (${category1} like '%${value1}%'
		${option1} ${category2} like '%${value2}%')
		${option2} ${category3} like '%${value3}%'
	 </select>	

	<select id="SearchThrList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where (b.${category1} like '%${search1}%'
		${option1} b.${category2} like '%${search2}%')
		${option2} b.${category3} like '%${search3}%'
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select>
	 
	 <select id="SearchThrAllCount" parameterType="hashmap" resultType="int">	
		select count(*)
		from book
		where ((book_subject like #{all} or book_author like #{all} or book_publisher like #{all} or book_isbn like #{all} or book_classification like #{all})
		${option1} ${category1} like '%${value1}%')
		${option2} ${category2} like '%${value2}%'
	</select>

	<select id="SearchThrAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">	
		select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where ((b.book_subject like '%${value}%' or b.book_author like '%${value}%' or b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		${option1} b.${category1} like '%${value1}%')
		${option2} b.${category2} like '%${search2}%'
		order by b.book_number desc limit #{startRow},#{pageSize}	 
	 </select>	 
	 
	 	 <select id="getBookDateSearchAllCount" resultType="int" parameterType="hashmap">
	 	select count(*)
		from book
		where (book_subject like #{all} or book_author like #{all} or book_publisher like #{all} or book_isbn like #{all} or book_classification like #{all})
		and book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
	 </select>
	 
	 <select id="getBookDateSearchAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where (b.book_subject like '%${value}%' or b.book_author like '%${value}%' or b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 	 
	 <select id="getBookDateSearchCount" parameterType="hashmap" resultType="int">
	 	select count(*) from book where ${category} like '%${value}%'
		and book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
	 </select>
	 
	 <select id="getBookDateSearchList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where b.${category_} like '%${search}%'
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 
	 <select id="SearchDateTwoCount" parameterType="hashmap" resultType="int">
	 	select count(*)
		from book
		where (${category1} like '%${value1}%'
		${option} ${category2} like '%${value2}%')
		and book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
	 </select>	

	<select id="SearchDateTwoList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where (b.${category1} like '%${search1}%'
		${option} b.${category2} like '%${search2}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select>
	 
	 <select id="SearchDateTwoAllCount" parameterType="hashmap" resultType="int">	
		select count(*)
		from book
		where ((book_subject like #{all} or book_author like #{all} or book_publisher like #{all} or book_isbn like #{all} or book_classification like #{all})
		${option} ${category} like '%${value}%')
		and book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
	</select>

	<select id="SearchDateTwoAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">	
		select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where ((b.book_subject like '%${value}%' or b.book_author like '%${value}%' or
	 	b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		${option} b.${category1} like '%${value1}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		order by b.book_number desc limit #{startRow},#{pageSize}	 
	 </select> 

	 <select id="SearchDateThrCount" parameterType="hashmap" resultType="int">
	 	select count(*)
		from book
		where ((${category1} like '%${value1}%'
		${option1} ${category2} like '%${value2}%')
		${option2} ${category3} like '%${value3}%')
		and book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
	 </select>	

	<select id="SearchDateThrList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where ((b.${category1} like '%${search1}%'
		${option1} b.${category2} like '%${search2}%')
		${option2} b.${category3} like '%${search3}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select>
	 
	 <select id="SearchDateThrAllCount" parameterType="hashmap" resultType="int">	
		select count(*)
		from book
		where (((book_subject like #{all} or book_author like #{all} or book_publisher like #{all} or book_isbn like #{all} or book_classification like #{all})
		${option1} ${category1} like '%${value1}%')
		${option2} ${category2} like '%${value2}%')
		and book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
	</select>

	<select id="SearchDateThrAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">	
		select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number
		where (((b.book_subject like '%${value}%' or b.book_author like '%${value}%' or b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		${option1} b.${category1} like '%${value1}%')
		${option2} b.${category2} like '%${search2}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		order by b.book_number desc limit #{startRow},#{pageSize}	 
	 </select>	 
	 
	 
	 
	 
	 
	 
	 <select id="getBookSortSubject" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_subject asc limit #{startRow}, #{pageSize}	 
	 </select>
	 
	 <select id="getBookSortAuthor" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_author limit #{startRow}, #{pageSize}	 
	 </select>

	 <select id="getBookSortNumber" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by bb.book_number desc limit #{startRow}, #{pageSize} 	 
	 </select>

	 <select id="getBookSortPubDate" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_pubDate desc limit #{startRow}, #{pageSize} 	 
	 </select>

	 <select id="getBookSortDate" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state, bb.bbook_bstate,
		rb.rbook_date, rb.rbook_check, b.book_file
		from book b
		left join dbook db
		on b.book_number=db.book_number
		left join bbook bb
		on b.book_number=bb.book_number
		left join rbook rb
		on b.book_number=rb.book_number order by b.book_date desc limit #{startRow}, #{pageSize} 	 
	 </select>	 	 	
	 
	 <select id="getBookNum" parameterType="int" resultType="int">
	 	select ifnull(max(book_number),0) from book
	 </select>
	 
	 <insert id="insertBook" parameterType="net.book.db.BookDTO">
	 	insert into book (book_number, book_subject, book_author, book_publisher, book_pubDate, 
	 	book_form, book_notation, book_isbn, book_classification, book_date, book_file)
	 	values (#{book_number}, #{book_subject}, #{book_author}, #{book_publisher}, #{book_pubDate}, 
	 	#{book_form}, #{book_notation}, #{book_isbn}, #{book_classification}, now(), #{book_file})
	 </insert>
	 
	 <update id="admBookReWrite" parameterType="net.book.db.BookDTO">
	 	update book set book_subject=#{book_subject}, book_author=#{book_author}, book_publisher=#{book_publisher},
	 	book_pubDate=#{book_pubDate}, book_form=#{book_form}, book_notation=#{book_notation},
	 	book_isbn=#{book_isbn}, book_classification=#{book_classification}
	 	where book_number=#{book_number}
	 </update>
	 
	 <select id="getBookInfo"  parameterType="int" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, b.book_pubDate, b.book_form, b.book_notation,
	 	 b.book_isbn, b.book_classification, b.book_date, d.dbook_reason, d.dbook_state , b.book_file
	 	from book b
	 	left join dbook d
	 	on d.book_number=b.book_number
	 	where b.book_number=#{book_number}
	 </select>
	 
	 <select id="getDBookCount" resultType="int">
	 	select count(*) from dbook
	 </select>
	 
	 <insert id="insertDBook" parameterType="net.book.db.BookDTO">
	 	insert into dbook (book_number, dbook_reason, dbook_state)
	 	values (#{book_number}, #{dbook_reason}, #{dbook_state})
	 </insert>
	 
	 <select id="getDBookList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	  	select * from dbook order by book_number desc limit #{startRow}, #{pageSize} 
	 </select>
	 
	 <select id="getRBookCount" resultType="int">
	 	select count(*) from rbook
	 </select>
	 
	 <select id="getRBookList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select * from rbook order by book_number desc limit #{startRow}, #{PageSize}
	 </select>
	 
	 <select id="getHBookCount" resultType="int">
	 	select count(*) from hbook
	 </select>
 
 	 <select id="getHBookList" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select member_id,hbook_subject,hbook_author,hbook_check,hbook_publisher,ifnull(hbook_isbn, 0) hbook_isbn,hbook_explain
	 	from hbook order by member_id desc limit #{startRow},#{pageSize}
	 </select>
	 
	 <select id="getHBookInfo" parameterType="hashmap" resultType="net.book.db.BookDTO">
	 	select * from hbook where (member_id=#{member_id} and hbook_subject=#{hbook_subject}) and hbook_author=#{hbook_author}
	 </select>
	 
	 <update id="getHBookReWrite" parameterType="net.book.db.BookDTO">
	 	update hbook set hbook_check=#{hbook_check}, hbook_isbn=#{hbook_isbn}
	 	where member_id=#{member_id}
	 </update>
 
	<select id="getMemberCount" resultType="int">
 		select count(*) as count from member
 	</select>
 
	<select id="getBlackMemberCount" resultType="int">
 	select count(*) from blacklist;
 	</select>
 	
 	<select id="getGoodMemberCount" resultType="int">
 	select count(*) from good_member;
 	</select>
 	<select id="getMemberList" parameterType="hashmap" resultType="net.member.db.MemberDTO">
   	 	select m.member_id, m.member_pass, m.member_name, m.member_post, m.member_address1, m.member_address2, 
		m.member_phone, m.member_email, m.member_date, g.borrow_count, ifnull(g.gm_check, 0) gm_check, b.bl_count, b.bl_date, ifnull(b.bl_check, 0) bl_check
		from member m
		left join good_member g
		on m.member_id=g.member_id 
		left join blacklist b 
		on m.member_id = b.member_id order by member_name desc limit #{startRow},#{pageSize}
   	</select>
	<select id="getAdminMember" parameterType="String" resultType="net.member.db.MemberDTO">
	select m.member_id, m.member_pass, m.member_name, m.member_post, m.member_address1, m.member_address2, 
		m.member_phone, m.member_email, m.member_date, g.borrow_count, ifnull(g.gm_check, 0) gm_check, b.bl_count, b.bl_date, ifnull(b.bl_check, 0) bl_check
		from member m
		left join good_member g
		on m.member_id=g.member_id 
		left join blacklist b 
		on m.member_id = b.member_id where m.member_id=#{member_id};
	</select>
	
	<insert id="AdminFacilityInsert" parameterType="net.facility.db.FacilityDTO">
		insert into facility(facil_num , facil_type , facil_use)
		values (#{facil_num} , #{facil_type} , #{facil_use})
	</insert>
 
 	<select id="getFacility" parameterType="String" resultType="net.facility.db.FacilityDTO">
		select * from facility
		where facil_num = #{facil_num}
	</select>
 	
 	<select id="getFacilList" parameterType="hashmap" resultType="net.facility.db.FacilityDTO">
   	 	select f.facil_num, f.facil_use, s.obj_mname,s.obj_condition,s.obj_d_reason
		from facility f
		join seat s
		on f.facil_num=s.facil_num where f.facil_num =#{facil_num} order by obj_mname limit #{startRow},#{pageSize}
   	</select>
   	
   	<update id="updateFacilSugg" parameterType="net.facility.db.FacilityDTO">
		update seat s join facility f on s.facil_num =f.facil_num
		set f.facil_use=#{facil_use}, s.obj_condition=#{obj_condition} , s.obj_d_reason=#{obj_d_reason}
		where f.facil_num=#{facil_num} and s.obj_mname=#{obj_mname};
	</update>
	
	<select id="getFacilAddList"  resultType="net.facility.db.FacilityDTO">
	 	select * from object
	 </select>	
	 
	 <insert id="insertSeat" parameterType="net.facility.db.FacilityDTO">
	 	insert into seat (facil_num, obj_mname)
	 	values (#{facil_num}, #{obj_mname})
	 </insert>
 </mapper>