<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="book">

	<select id="BookCount" resultType="int">
		 	select count(b.book_number) from book b
			left join dbook db
			on b.book_number = db.book_number
			where db.dbook_reason is null
	 </select>
	 	 
	 <select id="BookList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
			where db.dbook_reason is null
			order by b.book_number desc
			limit #{startRow}, #{pageSize} 
	 </select>

	<select id="getBookInfo" parameterType="int" resultType="net.book.db.BookDTO">
	 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, b.book_pubDate, b.book_form, b.book_notation,
	 	 b.book_isbn, b.book_classification, b.book_date, d.dbook_reason, d.dbook_state , b.book_file
	 	from book b
	 	left join dbook d
	 	on d.book_number=b.book_number
	 	where b.book_number=#{book_number}
	</select>

	 <select id="BookSortSubject" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
			where db.dbook_state is null
			order by b.book_subject asc limit #{startRow}, #{pageSize}	 
	 </select>
	 
	 <select id="BookSortAuthor" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where db.dbook_state is null
		order by b.book_author limit #{startRow}, #{pageSize}	 
	 </select>

	 <select id="BookSortNumber" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where db.dbook_state is null
		order by b.book_number desc limit #{startRow}, #{pageSize} 	 
	 </select>

	 <select id="BookSortPubDate" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where db.dbook_state is null 
		order by b.book_pubDate desc limit #{startRow}, #{pageSize} 	 
	 </select>

	 <select id="BookSortIO" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where db.dbook_state is null 
		order by b.book_date desc limit #{startRow}, #{pageSize} 	 
	 </select>
	 
	 <select id="Bk_SearchAllCount" resultType="int" parameterType="hashmap">
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
	 	where (b.book_subject like #{all} or b.book_author like #{all} or
	 	b.book_publisher like #{all} or b.book_isbn like #{all} or b.book_classification like #{all})
		and db.dbook_reason is null
	 </select>
	 
	 <select id="Bk_SearchAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where db.dbook_reason is null
		and (b.book_subject like '%${value}%' or b.book_author like '%${value}%' or
	 	b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 	 
	 <select id="Bk_SearchCount" parameterType="hashmap" resultType="int">
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
		where b.${category} like '%${value}%'
		and db.dbook_reason is null
	 </select>
	 
	 <select id="Bk_SearchList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where (b.${category_} like '%${search}%') and
		db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 
	 <select id="Bk_SearchTwoAllCount" parameterType="hashmap" resultType="int">	
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
		where (b.book_subject like #{all} or b.book_author like #{all} or b.book_publisher like #{all} or b.book_isbn like #{all} or b.book_classification like #{all})
		${option} b.${category} like '%${value}%'
		and db.dbook_reason is null
	</select>

	<select id="Bk_SearchTwoAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">	
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where (b.book_subject like '%${value}%' or b.book_author like '%${value}%' or b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		${option} b.${category1} like '%${value1}%'
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}	 
	 </select> 

	 <select id="Bk_SearchTwoCount" parameterType="hashmap" resultType="int">
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
	 	where b.${category1} like '%${value1}%'
		${option} b.${category2} like '%${value2}%'
		and db.dbook_reason is null
	 </select>	

	<select id="Bk_SearchTwoList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where b.${category1} like '%${search1}%'
		${option} b.${category2} like '%${search2}%'
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select>	
 
	 <select id="Bk_SearchThrAllCount" parameterType="hashmap" resultType="int">	
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
		where ((b.book_subject like #{all} or b.book_author like #{all} or b.book_publisher like #{all} or b.book_isbn like #{all} or b.book_classification like #{all})
		${option1} b.${category1} like '%${value1}%')
		${option2} b.${category2} like '%${value2}%'
		and db.dbook_reason is null
	</select>

	<select id="Bk_SearchThrAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where ((b.book_subject like '%${value}%' or b.book_author like '%${value}%' or b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		${option1} b.${category1} like '%${value1}%')
		${option2} b.${category2} like '%${search2}%'
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}	 
	 </select>

	 <select id="Bk_SearchThrCount" parameterType="hashmap" resultType="int">
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
		where (b.${category1} like '%${value1}%'
		${option1} b.${category2} like '%${value2}%')
		${option2} b.${category3} like '%${value3}%'
		and db.dbook_reason is null
	 </select>	

	<select id="Bk_SearchThrList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where (b.${category1} like '%${search1}%'
		${option1} b.${category2} like '%${search2}%')
		${option2} b.${category3} like '%${search3}%'
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select>	 
	 
	 <select id="Bk_DateSearchAllCount" resultType="int" parameterType="hashmap">
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
		where (b.book_subject like #{all} or b.book_author like #{all} or b.book_publisher like #{all} or b.book_isbn like #{all} or b.book_classification like #{all})
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
	 </select>
	 
	 <select id="Bk_DateSearchAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where (b.book_subject like '%${value}%' or b.book_author like '%${value}%' or b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 	 
	 <select id="Bk_DateSearchCount" parameterType="hashmap" resultType="int">
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
	 	where b.${category} like '%${value}%'
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
	 </select>
	 
	 <select id="Bk_DateSearchList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where b.${category_} like '%${search}%'
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select> 
	 
	 <select id="Bk_DateSearchTwoAllCount" parameterType="hashmap" resultType="int">	
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
		where ((b.book_subject like #{all} or b.book_author like #{all} or b.book_publisher like #{all} or b.book_isbn like #{all} or b.book_classification like #{all})
		${option} b.${category} like '%${value}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
	</select>

	<select id="Bk_DateSearchTwoAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">	
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where ((b.book_subject like '%${value}%' or b.book_author like '%${value}%' or
	 	b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		${option} b.${category1} like '%${value1}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}	 
	 </select> 
	 
	 <select id="Bk_DateSearchTwoCount" parameterType="hashmap" resultType="int">
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
		where (b.${category1} like '%${value1}%'
		${option} b.${category2} like '%${value2}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
	 </select>	

	<select id="Bk_DateSearchTwoList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where (b.${category1} like '%${search1}%'
		${option} b.${category2} like '%${search2}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select>
	 
	 <select id="Bk_DateSearchThrAllCount" parameterType="hashmap" resultType="int">	
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
		where (((b.book_subject like #{all} or b.book_author like #{all} or b.book_publisher like #{all} or b.book_isbn like #{all} or b.book_classification like #{all})
		${option1} b.${category1} like '%${value1}%')
		${option2} b.${category2} like '%${value2}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
	</select>

	<select id="Bk_DateSearchThrAllList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where (((b.book_subject like '%${value}%' or b.book_author like '%${value}%' or b.book_publisher like '%${value}%' or b.book_isbn like '%${value}%' or b.book_classification like '%${value}%')
		${option1} b.${category1} like '%${value1}%')
		${option2} b.${category2} like '%${search2}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}	 
	 </select>

	 <select id="Bk_DateSearchThrCount" parameterType="hashmap" resultType="int">
	 	select count(b.book_number) from book b
		left join dbook db
		on b.book_number = db.book_number
		where ((b.${category1} like '%${value1}%'
		${option1} b.${category2} like '%${value2}%')
		${option2} b.${category3} like '%${value3}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
	 </select>	

	<select id="Bk_DateSearchThrList" parameterType="hashmap" resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where ((b.${category1} like '%${search1}%'
		${option1} b.${category2} like '%${search2}%')
		${option2} b.${category3} like '%${search3}%')
		and b.book_pubDate >= date_sub(current_date(), INTERVAL #{pubDate} YEAR)
		and db.dbook_reason is null
		order by b.book_number desc limit #{startRow},#{pageSize}
	 </select>	 	 	 	

	<select id="popularList" resultType="net.book.db.BookDTO">
		select
		bb.book_number,count(*),b.* from bbook bb join book b on
		(bb.book_number=b.book_number)
		group by bb.book_number order by count(*) desc
	</select>

	<select id="newBookList" resultType="net.book.db.BookDTO">
		select * from book where
		book_pubDate >= date_sub(now(),interval 2 day) order by book_pubDate
		desc, book_number desc
	</select>

	<select id="getBookSearchCount" parameterType="String"
		resultType="int">
		select count(*) from book where book_subject like '%${value}%'
	</select>

	<select id="getBookSearchList" parameterType="hashmap"
		resultType="net.book.db.BookDTO">
		 	select b.book_number, b.book_subject, b.book_author, b.book_publisher, db.dbook_state,
		 	ifnull(bb.bbook_bstate, 0) bbook_bstate, bb.bbook_bdate, bb.bbook_rdate,
			ifnull(rb.rbook_check, 0) rbook_check, b.book_file
			from book b
			left join dbook db
			on b.book_number=db.book_number
			left join bbook bb
			on b.book_number=bb.book_number
			left join (select book_number, count(*) rbook_check from rbook group by book_number) rb
			on b.book_number=rb.book_number
		where b.book_subject like '%${search}%'
		order by b.book_number desc limit #{startRow},#{pageSize}
	</select>
	
	<insert id="insertHBook" parameterType="net.book.db.BookDTO">
		insert into hbook(member_id, hbook_subject, hbook_author, hbook_publisher, hbook_explain, hbook_check)
		values(#{member_id}, #{hbook_subject}, #{hbook_author}, #{hbook_publisher}, #{hbook_explain}, #{hbook_check})
	</insert>

</mapper>